<!DOCTYPE html>
<html lang="ar" dir="rtl">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>نافس - لوحة تحكم المعلمة</title>
    <style>
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }

        body {
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            min-height: 100vh;
            color: #333;
            padding: 20px;
        }

        .container {
            max-width: 1400px;
            margin: 0 auto;
        }

        .header {
            background: white;
            border-radius: 20px;
            padding: 30px;
            margin-bottom: 30px;
            box-shadow: 0 10px 30px rgba(0,0,0,0.1);
            text-align: center;
        }

        .logo-section {
            display: flex;
            align-items: center;
            justify-content: center;
            gap: 20px;
            margin-bottom: 20px;
            flex-wrap: wrap;
        }

        .logo {
            width: 80px;
            height: 80px;
            background: linear-gradient(135deg, #4CAF50, #45a049);
            border-radius: 50%;
            display: flex;
            align-items: center;
            justify-content: center;
            color: white;
            font-size: 32px;
            font-weight: bold;
            box-shadow: 0 5px 15px rgba(76, 175, 80, 0.3);
        }

        .title-section h1 {
            color: #2c3e50;
            font-size: 2.5em;
            margin-bottom: 5px;
            background: linear-gradient(135deg, #667eea, #764ba2);
            -webkit-background-clip: text;
            -webkit-text-fill-color: transparent;
        }

        .subtitle {
            color: #e67e22;
            font-size: 1.2em;
            font-weight: 600;
            margin-bottom: 15px;
        }

        .school-info {
            color: #555;
            font-size: 14px;
            line-height: 1.8;
        }

        .tabs {
            display: flex;
            background: white;
            border-radius: 15px;
            padding: 10px;
            margin-bottom: 30px;
            box-shadow: 0 5px 20px rgba(0,0,0,0.1);
            gap: 10px;
            flex-wrap: wrap;
        }

        .tab {
            flex: 1;
            min-width: 150px;
            padding: 15px 20px;
            background: transparent;
            border: none;
            border-radius: 10px;
            cursor: pointer;
            transition: all 0.3s ease;
            font-size: 16px;
            font-weight: 500;
            color: #666;
        }

        .tab.active {
            background: linear-gradient(135deg, #667eea, #764ba2);
            color: white;
            transform: translateY(-2px);
            box-shadow: 0 5px 15px rgba(102, 126, 234, 0.3);
        }

        .tab-content {
            display: none;
        }

        .tab-content.active {
            display: block;
        }

        .card {
            background: white;
            border-radius: 20px;
            padding: 30px;
            margin-bottom: 30px;
            box-shadow: 0 10px 30px rgba(0,0,0,0.1);
        }

        .card-title {
            font-size: 1.5em;
            color: #2c3e50;
            margin-bottom: 20px;
            display: flex;
            align-items: center;
            gap: 10px;
        }

        .icon {
            width: 40px;
            height: 40px;
            border-radius: 10px;
            display: flex;
            align-items: center;
            justify-content: center;
            color: white;
            font-size: 20px;
        }

        .icon.questions { background: linear-gradient(135deg, #3498db, #2980b9); }
        .icon.students { background: linear-gradient(135deg, #e74c3c, #c0392b); }
        .icon.reports { background: linear-gradient(135deg, #f39c12, #e67e22); }
        .icon.settings { background: linear-gradient(135deg, #9b59b6, #8e44ad); }

        .upload-area {
            border: 3px dashed #bdc3c7;
            border-radius: 15px;
            padding: 40px;
            text-align: center;
            cursor: pointer;
            margin-bottom: 20px;
            transition: all 0.3s ease;
        }

        .upload-area:hover {
            border-color: #667eea;
            background: #f8f9ff;
        }

        .upload-icon {
            font-size: 48px;
            margin-bottom: 15px;
        }

        .btn {
            background: linear-gradient(135deg, #667eea, #764ba2);
            color: white;
            border: none;
            padding: 12px 25px;
            border-radius: 10px;
            font-size: 14px;
            cursor: pointer;
            transition: all 0.3s ease;
            margin: 5px;
        }

        .btn:hover {
            transform: translateY(-2px);
            box-shadow: 0 5px 15px rgba(102, 126, 234, 0.3);
        }

        .btn.danger { background: linear-gradient(135deg, #e74c3c, #c0392b); }
        .btn.success { background: linear-gradient(135deg, #27ae60, #2ecc71); }
        .btn.warning { background: linear-gradient(135deg, #f39c12, #e67e22); }
        .btn.info { background: linear-gradient(135deg, #3498db, #2980b9); }

        .question-item {
            background: #f8f9fa;
            border: 1px solid #e9ecef;
            border-radius: 10px;
            padding: 20px;
            margin-bottom: 15px;
        }

        .question-header {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 10px;
        }

        .question-subject {
            background: linear-gradient(135deg, #667eea, #764ba2);
            color: white;
            padding: 5px 10px;
            border-radius: 15px;
            font-size: 12px;
        }

        .question-text {
            font-size: 16px;
            font-weight: 500;
            margin-bottom: 10px;
            color: #2c3e50;
        }

        .question-options {
            display: grid;
            grid-template-columns: 1fr 1fr;
            gap: 10px;
        }

        .option {
            padding: 8px 12px;
            background: white;
            border: 1px solid #dee2e6;
            border-radius: 8px;
            font-size: 14px;
        }

        .option.correct {
            background: #d4edda;
            border-color: #c3e6cb;
            color: #155724;
            font-weight: 500;
        }

        .stats-grid {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
            gap: 20px;
            margin-bottom: 30px;
        }

        .stat-card {
            background: white;
            padding: 25px;
            border-radius: 15px;
            text-align: center;
            box-shadow: 0 5px 20px rgba(0,0,0,0.1);
        }

        .stat-number {
            font-size: 2.5em;
            font-weight: bold;
            margin-bottom: 10px;
        }

        .stat-label {
            color: #7f8c8d;
            font-size: 14px;
        }

        .student-item {
            display: flex;
            justify-content: space-between;
            align-items: center;
            padding: 15px 20px;
            border-bottom: 1px solid #e9ecef;
        }

        .student-info h4 {
            margin: 0 0 5px 0;
            color: #2c3e50;
        }

        .student-info p {
            margin: 0;
            color: #7f8c8d;
            font-size: 14px;
        }

        .student-score {
            font-size: 18px;
            font-weight: bold;
            color: #27ae60;
            margin-left: 10px;
        }

        .form-group {
            margin-bottom: 20px;
        }

        .form-group label {
            display: block;
            margin-bottom: 8px;
            color: #555;
            font-weight: 500;
        }

        .form-group input, .form-group select, .form-group textarea {
            width: 100%;
            padding: 12px;
            border: 2px solid #e1e8ed;
            border-radius: 8px;
            font-size: 14px;
        }

        .notification {
            position: fixed;
            top: 20px;
            right: 20px;
            padding: 15px 25px;
            border-radius: 10px;
            color: white;
            font-weight: 500;
            z-index: 1000;
            transform: translateX(400px);
            transition: transform 0.3s ease;
            max-width: 400px;
        }

        .notification.show {
            transform: translateX(0);
        }

        .notification.success { background: linear-gradient(135deg, #27ae60, #2ecc71); }
        .notification.error { background: linear-gradient(135deg, #e74c3c, #c0392b); }
        .notification.info { background: linear-gradient(135deg, #3498db, #2980b9); }

        .badge {
            display: inline-block;
            padding: 3px 8px;
            border-radius: 12px;
            font-size: 11px;
            font-weight: 600;
            margin-left: 5px;
        }

        .badge.completed {
            background: #d4edda;
            color: #155724;
        }

        .badge.in-progress {
            background: #fff3cd;
            color: #856404;
        }

        @media (max-width: 768px) {
            .tabs { flex-direction: column; }
            .stats-grid { grid-template-columns: 1fr; }
            .question-options { grid-template-columns: 1fr; }
        }
    </style>
</head>
<body>
    <div class="container">
        <!-- Header -->
        <div class="header">
            <div class="logo-section">
                <div class="logo">ن</div>
                <div class="title-section">
                    <h1>نافس</h1>
                    <div class="subtitle">لوحة تحكم المعلمة</div>
                    <div class="school-info">
                        المملكة العربية السعودية - وزارة التعليم<br>
                        مكتب قطاعي أحد والعوالي<br>
                        المتوسطة الثالثة والأربعون - بنات<br>
                        <strong>مديرة المدرسة: منى الرشيدي</strong>
                    </div>
                </div>
            </div>
        </div>

        <!-- Tabs -->
        <div class="tabs">
            <button class="tab active" onclick="showTab('questions')">📝 إدارة الأسئلة</button>
            <button class="tab" onclick="showTab('students')">👥 متابعة الطالبات</button>
            <button class="tab" onclick="showTab('disqualified')">🚫 المستبعدات</button>
            <button class="tab" onclick="showTab('reports')">📊 التقارير</button>
            <button class="tab" onclick="showTab('settings')">⚙️ الإعدادات</button>
        </div>

        <!-- تاب الأسئلة -->
        <div id="questions" class="tab-content active">
            <div class="card">
                <h2 class="card-title"><div class="icon questions">📤</div>استيراد الأسئلة</h2>
                <div class="upload-area" onclick="document.getElementById('fileInput').click()">
                    <div class="upload-icon">📁</div>
                    <div>اسحب وأفلت ملف الأسئلة هنا</div>
                    <div style="color:#95a5a6;font-size:14px;margin-top:10px">أو انقر للتصفح (CSV, JSON)</div>
                    <input type="file" id="fileInput" style="display:none" accept=".csv,.json">
                </div>
                <div style="display:flex;gap:10px;flex-wrap:wrap">
                    <button class="btn" onclick="uploadQuestions()">📤 رفع الأسئلة</button>
                    <button class="btn warning" onclick="downloadTemplate()">📋 تحميل قالب</button>
                    <button class="btn success" onclick="addManualQuestion()">➕ إضافة سؤال يدوي</button>
                </div>
            </div>

            <div class="card">
                <div style="display:flex;justify-content:space-between;align-items:center;margin-bottom:20px">
                    <h2 class="card-title"><div class="icon questions">📋</div>بنك الأسئلة الحالي</h2>
                    <div>
                        <button class="btn danger" onclick="clearAllQuestions()">🗑️ حذف الكل</button>
                        <button class="btn success" onclick="publishQuestions()">🚀 نشر للطالبات</button>
                    </div>
                </div>
                <div id="questionsList"></div>
            </div>

            <div id="manualQuestionForm" class="card" style="display:none">
                <h2 class="card-title"><div class="icon questions">✏️</div>إضافة سؤال جديد</h2>
                <div class="form-group">
                    <label>نص السؤال</label>
                    <textarea id="questionText" rows="3" placeholder="أدخل نص السؤال هنا..."></textarea>
                </div>
                <div class="form-group">
                    <label>المادة</label>
                    <select id="questionSubject">
                        <option value="">اختر المادة</option>
                        <option value="رياضيات">رياضيات</option>
                        <option value="علوم">علوم</option>
                        <option value="لغة عربية">لغة عربية</option>
                        <option value="تربية إسلامية">تربية إسلامية</option>
                        <option value="اجتماعيات">اجتماعيات</option>
                        <option value="لغة إنجليزية">لغة إنجليزية</option>
                    </select>
                </div>
                <div style="display:grid;grid-template-columns:1fr 1fr;gap:15px">
                    <div class="form-group"><label>الخيار الأول</label><input type="text" id="option1"></div>
                    <div class="form-group"><label>الخيار الثاني</label><input type="text" id="option2"></div>
                    <div class="form-group"><label>الخيار الثالث</label><input type="text" id="option3"></div>
                    <div class="form-group"><label>الخيار الرابع</label><input type="text" id="option4"></div>
                </div>
                <div class="form-group">
                    <label>الإجابة الصحيحة</label>
                    <select id="correctAnswer">
                        <option value="">اختر الإجابة الصحيحة</option>
                        <option value="0">الخيار الأول</option>
                        <option value="1">الخيار الثاني</option>
                        <option value="2">الخيار الثالث</option>
                        <option value="3">الخيار الرابع</option>
                    </select>
                </div>
                <div style="display:flex;gap:10px">
                    <button class="btn success" onclick="saveQuestion()">💾 حفظ السؤال</button>
                    <button class="btn" onclick="cancelAddQuestion()">❌ إلغاء</button>
                </div>
            </div>
        </div>

        <!-- تاب الطالبات -->
        <div id="students" class="tab-content">
            <div class="stats-grid">
                <div class="stat-card"><div class="stat-number" style="color:#3498db" id="totalStudents">0</div><div class="stat-label">إجمالي الطالبات</div></div>
                <div class="stat-card"><div class="stat-number" style="color:#e74c3c" id="grade1Count">0</div><div class="stat-label">الصف الأول</div></div>
                <div class="stat-card"><div class="stat-number" style="color:#f39c12" id="grade2Count">0</div><div class="stat-label">الصف الثاني</div></div>
                <div class="stat-card"><div class="stat-number" style="color:#27ae60" id="grade3Count">0</div><div class="stat-label">الصف الثالث</div></div>
            </div>

            <div class="card">
                <div style="display:flex;justify-content:space-between;align-items:center;margin-bottom:20px">
                    <h2 class="card-title"><div class="icon students">👥</div>قائمة الطالبات المسجلات</h2>
                    <button class="btn success" onclick="exportStudents()">📥 تصدير القائمة</button>
                </div>
                <div id="studentsList"></div>
            </div>
        </div>

        <!-- تاب المستبعدات -->
        <div id="disqualified" class="tab-content">
            <div class="card">
                <h2 class="card-title"><div class="icon students">🚫</div>الطالبات المستبعدات</h2>
                <div class="stat-card" style="margin-bottom:20px">
                    <div class="stat-number" style="color:#e74c3c" id="disqualifiedCount">0</div>
                    <div class="stat-label">عدد المستبعدات</div>
                </div>
                <div id="disqualifiedList"></div>
            </div>
        </div>

        <!-- تاب التقارير -->
        <div id="reports" class="tab-content">
            <div class="card">
                <h2 class="card-title"><div class="icon reports">📊</div>التقارير والإحصائيات</h2>
                <p style="text-align:center;color:#7f8c8d;padding:40px">ستتم إضافة التقارير المفصلة قريباً...</p>
            </div>
        </div>

        <!-- تاب الإعدادات -->
        <div id="settings" class="tab-content">
            <div class="card">
                <h2 class="card-title"><div class="icon settings">⚙️</div>إعدادات النظام</h2>
                <div class="form-group">
                    <label>إعادة تعيين النقاط الأسبوعية</label>
                    <button class="btn warning" onclick="resetWeeklyScores()">🔄 إعادة تعيين النقاط</button>
                </div>
                <div class="form-group">
                    <label>نسخ احتياطي من البيانات</label>
                    <button class="btn" onclick="backupData()">💾 تحميل نسخة احتياطية</button>
                </div>
            </div>
        </div>

        <!-- Footer -->
        <div style="text-align:center;margin-top:40px;color:white">
            <p>تنفيذ وإشراف الأستاذة ريم العنزي</p>
        </div>
    </div>

    <!-- Notification -->
    <div id="notification" class="notification"><span id="notificationText"></span></div>

    <script>
        // المتغيرات العامة
        let currentQuestions = [];
        let allStudents = [
            { id: '1', name: 'فاطمة أحمد محمد', grade: '1', code: '123456', score: 45, testCompleted: true },
            { id: '2', name: 'نورة سعد عبدالله', grade: '1', code: '234567', score: 38, testCompleted: false, lastQuestion: 5 },
            { id: '3', name: 'مريم خالد علي', grade: '2', code: '345678', score: 52, testCompleted: true },
            { id: '4', name: 'ريم محمد سالم', grade: '2', code: '456789', score: 41, testCompleted: false },
            { id: '5', name: 'هند عبدالرحمن', grade: '3', code: '567890', score: 48, testCompleted: true },
            { id: '6', name: 'سارة فهد إبراهيم', grade: '3', code: '678901', score: 35, testCompleted: false, lastQuestion: 3 }
        ];

        // عرض الإشعارات
        function showNotification(message, type = 'info') {
            const notification = document.getElementById('notification');
            const notificationText = document.getElementById('notificationText');
            notificationText.textContent = message;
            notification.className = `notification ${type} show`;
            setTimeout(() => notification.classList.remove('show'), 4000);
        }

        // التبديل بين التبويبات
        function showTab(tabName) {
            document.querySelectorAll('.tab').forEach(tab => tab.classList.remove('active'));
            event.target.classList.add('active');
            document.querySelectorAll('.tab-content').forEach(content => content.classList.remove('active'));
            document.getElementById(tabName).classList.add('active');
            
            if (tabName === 'questions') loadQuestions();
            else if (tabName === 'students') loadStudents();
            else if (tabName === 'disqualified') loadDisqualified();
        }

        // ========== إدارة الأسئلة ==========
        function loadQuestions() {
            displayQuestions();
        }

        function displayQuestions() {
            const box = document.getElementById('questionsList');
            if (!currentQuestions.length) {
                box.innerHTML = '<div style="text-align:center;padding:40px;color:#7f8c8d"><p>لا توجد أسئلة حالياً</p></div>';
                return;
            }
            box.innerHTML = currentQuestions.map((q, i) => `
                <div class="question-item">
                    <div class="question-header">
                        <span class="question-subject">${q.subject}</span>
                        <button class="btn danger" onclick="deleteQuestion(${i})">🗑️</button>
                    </div>
                    <div class="question-text">${i + 1}. ${q.question}</div>
                    <div class="question-options">
                        ${q.options.map((opt, j) => `
                            <div class="option ${j === q.correct ? 'correct' : ''}">
                                ${String.fromCharCode(65 + j)}) ${opt}
                            </div>
                        `).join('')}
                    </div>
                </div>
            `).join('');
        }

        function uploadQuestions() {
            document.getElementById('fileInput').click();
        }

        document.getElementById('fileInput').addEventListener('change', function(e) {
            const file = e.target.files[0];
            if (!file) return;
            
            const reader = new FileReader();
            reader.onload = function(event) {
                try {
                    const content = event.target.result;
                    const ext = file.name.split('.').pop().toLowerCase();
                    
                    let questions = [];
                    if (ext === 'json') {
                        const data = JSON.parse(content);
                        questions = Array.isArray(data) ? data : (data.nafes_exam || []);
                    } else if (ext === 'csv') {
                        questions = parseCSV(content);
                    }
                    
                    if (questions.length > 0) {
                        currentQuestions = [...currentQuestions, ...questions.map((q, i) => ({
                            id: Date.now() + i,
                            ...q
                        }))];
                        showNotification(`تم إضافة ${questions.length} سؤال بنجاح`, 'success');
                        loadQuestions();
                    } else {
                        showNotification('لم يتم العثور على أسئلة صحيحة', 'error');
                    }
                } catch (err) {
                    showNotification('خطأ في قراءة الملف', 'error');
                }
            };
            reader.readAsText(file);
        });

        function parseCSV(text) {
            const lines = text.split('\n').slice(1);
            return lines.filter(line => line.trim()).map(line => {
                const parts = line.split(',').map(p => p.trim().replace(/"/g, ''));
                if (parts.length >= 7) {
                    return {
                        question: parts[0],
                        options: [parts[1], parts[2], parts[3], parts[4]],
                        correct: parseInt(parts[5]),
                        subject: parts[6]
                    };
                }
            }).filter(q => q);
        }

        function downloadTemplate() {
            const csv = '"السؤال","الخيار الأول","الخيار الثاني","الخيار الثالث","الخيار الرابع","الإجابة الصحيحة (0-3)","المادة"\n"ما هو حاصل ضرب 7 × 8؟","54","56","58","60","1","رياضيات"';
            const blob = new Blob([csv], { type: 'text/csv;charset=utf-8' });
            const link = document.createElement('a');
            link.href = URL.createObjectURL(blob);
            link.download = 'قالب_الأسئلة.csv';
            link.click();
            showNotification('تم تحميل القالب', 'success');
        }

        function addManualQuestion() {
            document.getElementById('manualQuestionForm').style.display = 'block';
        }

        function cancelAddQuestion() {
            document.getElementById('manualQuestionForm').style.display = 'none';
            document.getElementById('questionText').value = '';
            document.getElementById('questionSubject').value = '';
            document.getElementById('option1').value = '';
            document.getElementById('option2').value = '';
            document.getElementById('option3').value = '';
            document.getElementById('option4').value = '';
            document.getElementById('correctAnswer').value = '';
        }

        function saveQuestion() {
            const text = document.getElementById('questionText').value.trim();
            const subject = document.getElementById('questionSubject').value;
            const opts = [
                document.getElementById('option1').value.trim(),
                document.getElementById('option2').value.trim(),
                document.getElementById('option3').value.trim(),
                document.getElementById('option4').value.trim()
            ];
            const correct = parseInt(document.getElementById('correctAnswer').value);

            if (!text || !subject || opts.some(o => !o) || isNaN(correct)) {
                showNotification('يرجى إكمال جميع الحقول', 'error');
                return;
            }

            currentQuestions.push({
                id: Date.now(),
                question: text,
                options: opts,
                correct: correct,
                subject: subject
            });

            showNotification('تم حفظ السؤال بنجاح', 'success');
            cancelAddQuestion();
            loadQuestions();
        }

        function deleteQuestion(index) {
            if (confirm('هل أنت متأكد من حذف هذا السؤال؟')) {
                currentQuestions.splice(index, 1);
                showNotification('تم حذف السؤال', 'success');
                loadQuestions();
            }
        }

        function clearAllQuestions() {
            if (confirm('هل أنت متأكد من حذف جميع الأسئلة؟')) {
                currentQuestions = [];
                showNotification('تم حذف جميع الأسئلة', 'success');
                loadQuestions();
            }
        }

        function publishQuestions() {
            if (!currentQuestions.length) {
                showNotification('لا توجد أسئلة للنشر', 'error');
                return;
            }
            if (confirm(`هل تريد نشر ${currentQuestions.length} سؤال للطالبات؟`)) {
                showNotification('تم نشر الأسئلة بنجاح', 'success');
            }
        }

        // ========== إدارة الطالبات ==========
        function loadStudents() {
            updateStudentsStats();
            displayStudents();
        }

        function updateStudentsStats() {
            document.getElementById('totalStudents').textContent = allStudents.length;
            document.getElementById('grade1Count').textContent = allStudents.filter(s => s.grade === '1').length;
            document.getElementById('grade2Count').textContent = allStudents.filter(s => s.grade === '2').length;
            document.getElementById('grade3Count').textContent = allStudents.filter(s => s.grade === '3').length;
        }

        function displayStudents() {
            const box = document.getElementById('studentsList');
            const sorted = [...allStudents].sort((a, b) => (b.score || 0) - (a.score || 0));
            
            if (!sorted.length) {
                box.innerHTML = '<div style="text-align:center;padding:40px;color:#7f8c8d"><p>لا توجد طالبات مسجلات</p></div>';
                return;
            }

            box.innerHTML = sorted.map(st => {
                const isCompleted = st.testCompleted === true;
                const statusBadge = isCompleted 
                    ? '<span class="badge completed">✅ أتم الاختبار</span>' 
                    : (st.lastQuestion ? '<span class="badge in-progress">⏳ قيد التقدم</span>' : '');
                
                return `
                    <div class="student-item">
                        <div class="student-info">
                            <h4>${st.name} ${statusBadge}</h4>
                            <p>الصف ${st.grade} • رقم الطالبة: ${st.code}</p>
                            ${st.lastQuestion ? `<p style="font-size:12px;color:#3498db">📝 السؤال: ${st.lastQuestion + 1}</p>` : ''}
                        </div>
                        <div style="display:flex;align-items:center;gap:10px;flex-wrap:wrap">
                            <div class="student-score">${st.score || 0} نقطة</div>
                            <div style="display:flex;gap:5px;flex-wrap:wrap">
                                ${isCompleted ? `<button class="btn info" onclick="resetStudentTest('${st.id}','${st.name}')">🔄 إعادة الاختبار</button>` : ''}
                                <button class="btn warning" onclick="fullResetStudent('${st.id}','${st.name}')">⚡ إعادة كاملة</button>
                                <button class="btn danger" onclick="deleteStudent('${st.id}','${st.name}')">حذف</button>
                            </div>
                        </div>
                    </div>
                `;
            }).join('');
        }

        function resetStudentTest(id, name) {
            if (!confirm(`هل أنت متأكد من إعادة تعيين اختبار الطالبة: ${name}؟\n\nسيتم:\n✅ إعادتها للسؤال الأول\n✅ السماح بإعادة الاختبار\n✅ الاحتفاظ بنقاطها`)) return;
            
            const student = allStudents.find(s => s.id === id);
            if (student) {
                student.testCompleted = false;
                student.lastQuestion = 0;
                student.lastAnswers = [];
                showNotification(`تم إعادة تعيين اختبار ${name}`, 'success');
                loadStudents();
            }
        }

        function fullResetStudent(id, name) {
            if (!confirm(`⚠️ إعادة تعيين كاملة للطالبة: ${name}\n\n🔄 إعادة النقاط إلى صفر\n🔄 إعادة للسؤال الأول\n🔄 السماح بإعادة الاختبار\n\nهل أنت متأكد؟`)) return;
            
            const student = allStudents.find(s => s.id === id);
            if (student) {
                student.score = 0;
                student.testCompleted = false;
                student.lastQuestion = 0;
                student.lastAnswers = [];
                showNotification(`تم إعادة التعيين الكاملة لـ ${name}`, 'success');
                loadStudents();
            }
        }

        function deleteStudent(id, name) {
            if (!confirm(`هل أنت متأكد من حذف الطالبة ${name} نهائياً؟`)) return;
            
            allStudents = allStudents.filter(s => s.id !== id);
            showNotification(`تم حذف ${name}`, 'success');
            loadStudents();
        }

        function exportStudents() {
            if (!allStudents.length) {
                showNotification('لا توجد بيانات للتصدير', 'error');
                return;
            }
            
            const csv = 'الاسم,الصف,رقم الطالبة,النقاط,حالة الاختبار\n' + 
                allStudents.map(s => `"${s.name}","${s.grade}","${s.code}","${s.score || 0}","${s.testCompleted ? 'مكتمل' : 'غير مكتمل'}"`).join('\n');
            
            const blob = new Blob([csv], { type: 'text/csv;charset=utf-8' });
            const link = document.createElement('a');
            link.href = URL.createObjectURL(blob);
            link.download = `طالبات_نافس_${new Date().toLocaleDateString('ar-SA')}.csv`;
            link.click();
            showNotification('تم تصدير القائمة', 'success');
        }

        // ========== إدارة المستبعدات ==========
        function loadDisqualified() {
            const disqualified = allStudents.filter(s => s.disqualified === true);
            document.getElementById('disqualifiedCount').textContent = disqualified.length;
            
            const box = document.getElementById('disqualifiedList');
            if (!disqualified.length) {
                box.innerHTML = '<div style="text-align:center;padding:30px;color:#7f8c8d"><p>لا يوجد طالبات مستبعدات حالياً</p></div>';
                return;
            }
            
            box.innerHTML = disqualified.map(st => `
                <div class="student-item">
                    <div class="student-info">
                        <h4>${st.name}</h4>
                        <p>الصف ${st.grade} • رقم الطالبة: ${st.code}</p>
                        <p style="color:#c0392b;font-size:13px">سبب الاستبعاد: ${st.disqualificationReason || 'غير محدد'}</p>
                    </div>
                    <button class="btn success" onclick="reinstateStudent('${st.id}','${st.name}')">إعادة الطالبة</button>
                </div>
            `).join('');
        }

        function reinstateStudent(id, name) {
            if (!confirm(`هل تريد إعادة الطالبة ${name} إلى المسابقة؟`)) return;
            
            const student = allStudents.find(s => s.id === id);
            if (student) {
                student.disqualified = false;
                student.disqualificationReason = '';
                showNotification(`تم إعادة ${name}`, 'success');
                loadDisqualified();
                loadStudents();
            }
        }

        // ========== الإعدادات ==========
        function resetWeeklyScores() {
            if (!confirm('هل أنت متأكد من إعادة تعيين نقاط جميع الطالبات؟\n\n⚠️ سيتم إعادة النقاط فقط دون السماح بإعادة الاختبار')) return;
            
            allStudents.forEach(s => {
                s.score = 0;
                s.questionsAnswered = 0;
            });
            showNotification('تم إعادة تعيين النقاط', 'success');
            loadStudents();
        }

        function backupData() {
            const backup = {
                timestamp: new Date().toISOString(),
                students: allStudents,
                questions: currentQuestions
            };
            
            const blob = new Blob([JSON.stringify(backup, null, 2)], { type: 'application/json' });
            const link = document.createElement('a');
            link.href = URL.createObjectURL(blob);
            link.download = `نسخة_احتياطية_نافس_${new Date().toLocaleDateString('ar-SA')}.json`;
            link.click();
            showNotification('تم تحميل النسخة الاحتياطية', 'success');
        }

        // التهيئة عند تحميل الصفحة
        window.addEventListener('DOMContentLoaded', function() {
            loadQuestions();
            loadStudents();
        });
    </script>
</body>
</html>
